/* makes styling width and height easier */
*,* ::after,* ::before{
    box-sizing : border-box;
}

:root{
    --cell-size: 100px;
    /* how large the X's and O's are going to be */
    --mark-size: calc(var(--cell-size) *.9);
}


/* styling the body */
/* makes background easier to put in place\ */
/* puts board in center */
body{
margin: 0;
}

/* makes board fill entire screen */
.board{
width : 100vw;
height : 100vh;
display : grid;
justify-content: center;
align-content: center;
justify-items: center;
align-items: center;
/* makes cells appear in 3 rows and colums */
grid-template-columns: repeat(3,auto);
}

/* cresting the 9 different cells */
.cell {
/* calls  width and height from :root*/
width: var(--cell-size);
height: var(--cell-size);

border : 1px solid black;

/* display X's and O's in cells */
display: flex;
justify-content: center;
align-items: center;
position: relative;
cursor: pointer;
}

/* remove outer borders */ 
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top: none;
}

.cell:nth-child(3n+1){
    border-left : none;
}

.cell:nth-child(3n+3){
    border-right : none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
    border-bottom: none;
}

.cell.x,
.cell.circle{
    cursor: not-allowed;
}

.cell.x::before,
.cell.x::after,
.cell.circle::before{
    background-color: black;
}

/* when mouse hovers over a cell it show's the symbol according to the turn  */
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before{
background-color: lightgrey;
}


.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after
{
    content: '';
    position: absolute;
    width  :calc(var(--mark-size)* .15);
    height : var(--mark-size);
}

/* helps display X */
.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before{
    transform: rotate(45deg)
}

/* helps display X */
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after{
    transform: rotate(-45deg)
}

/* helps display Circle */
.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after{
    content: '';
    position: absolute;
    border-radius: 50%;
}

/* helps display Circle  */
.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before{
    width  : var(--mark-size);
    height : var(--mark-size);

}

/* helps display Circle when it is Circle's turn and hover over a cell */
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after{
    width  : calc(var(--mark-size)*.7);
    height  : calc(var(--mark-size)*.7);
    background-color: white;
}

/* display's winning message */
.winning-message{
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgb(0, 0, 0, .9);
    /* display: flex; */
    justify-content: center;
    align-items: center; 
    color: white;
    font-size: 5rem;
    flex-direction: column;
}

/* display's winning message */
.winning-message button{
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

/* display's winning message */
.winning-message button:hover{
    background-color: black;
    color: white;
    border-color: white;
}

.winning-message.show{
    display: flex;
}

footer{
    text-align: center;
    color: blue;
    background-color: chocolate;
    padding: 3px;
    margin-bottom: 100px; 
}